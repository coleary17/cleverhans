# GPU-enabled Dockerfile for adversarial ASR attack on AWS/Cloud GPUs
# Based on NVIDIA CUDA image for GPU acceleration

FROM --platform=linux/amd64 nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

# Set CUDA environment variables
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility
ENV CUDA_VISIBLE_DEVICES=0

# Prevent interactive prompts during build
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    python3-dev \
    curl \
    git \
    build-essential \
    libsndfile1-dev \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Install uv package manager
RUN curl -LsSf https://astral.sh/uv/install.sh | sh
ENV PATH="/root/.local/bin:$PATH"

# Set working directory
WORKDIR /app

# Copy project files
COPY pyproject.toml .
COPY README.md .
COPY read_data_full.txt .
COPY src/ ./src/
COPY *.py ./

# Install Python dependencies with CUDA support
# UV will handle PyTorch with CUDA automatically based on the environment
RUN uv sync --frozen

# Create necessary directories
RUN mkdir -p output

# Download LibriSpeech test-clean dataset (2620 FLAC files)
RUN apt-get update && apt-get install -y wget && rm -rf /var/lib/apt/lists/*
RUN wget -q https://www.openslr.org/resources/12/test-clean.tar.gz && \
    tar -xzf test-clean.tar.gz && \
    rm test-clean.tar.gz && \
    echo "LibriSpeech dataset downloaded: $(find LibriSpeech -name '*.flac' | wc -l) files"

# Set Python path
ENV PYTHONPATH=/app/src:$PYTHONPATH

# Default command - will auto-detect and use CUDA
CMD ["uv", "run", "python", "run_attack.py", "--device", "cuda"]